@page "/live"

@using vrScraper.DB.Models
@using vrScraper.Services
@inject IVideoService VideoService
@using Blzr.BootstrapSelect

@if (LiveVideo != null)
{
    <div class="video-item">

        @if (LiveVideo.Tags != null)
        {
            <div class="tag-container">
                @foreach (var tag in LiveVideo.Tags)
                {
                    <button type="button" class="btn btn-primary tag-pill">
                        @tag.Name
                    </button>
                }
            </div>
        }

        @if (LiveVideo.Stars != null)
        {
            <div class="star-container">
                @foreach (var star in LiveVideo.Stars)
                {
                    <button type="button" class="btn btn-primary star-pill">
                        @star.Name
                    </button>
                }
            </div>
        }

        <img class="live-image" src="@LiveVideo.Thumbnail" alt="@LiveVideo.Title" />
        <h3 class="live-title">@LiveVideo.Title</h3>

        <div class="rate-buttons">
            <button class="@(LiveVideo.Liked ? "btn btn-success btn-block active" : "btn btn-success btn-block")" @onclick="Like">Like</button>
            <button class="@(LiveVideo.Disliked ? "btn btn-danger btn-block active" : "btn btn-danger btn-block")" @onclick="Dislike">Dislike</button>
        </div>
    </div>
}

@code {

    public DbVideoItem? LiveVideo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.FromResult(0);

        this.LiveVideo = this.VideoService.CurrentLiveVideo;
        this.VideoService.OnLiveVideoChanged += (s, e) =>
        {
            this.LiveVideo = e.Video;
            InvokeAsync(StateHasChanged);
        };
    }

    private void Like()
    {
        if (this.LiveVideo == null) return;
        this.LiveVideo = this.VideoService.LikeVideo(this.LiveVideo);
        InvokeAsync(StateHasChanged);
    }

    private void Dislike()
    {
        if (this.LiveVideo == null) return;
        this.LiveVideo = this.VideoService.DislikeVideo(this.LiveVideo);
        InvokeAsync(StateHasChanged);
    }

    private void Fav()
    {
        if (this.LiveVideo == null) return;
        this.LiveVideo = this.VideoService.FavVideo(this.LiveVideo);
        InvokeAsync(StateHasChanged);
    }
}

<style>

    .video-item {
        position: absolute;
        right: 25px;
        bottom: 25px;
        display: flex;
        flex-direction: column;
        width: auto;
        align-items: flex-end;
    }

    .live-image {
        max-width: 320px;
    }

    .rate-buttons {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        min-width: 320px;
        margin: 8px 0px 8px 0px;
    }

        .rate-buttons button.btn {
            padding-right: 32px;
        }

            .rate-buttons button.btn:before {
                content: ' ✓'; /* Fügt einen Haken nach dem Button-Text hinzu */
                font-size: 1.0rem; /* Größe des Hakens anpassen */
                color: white; /* Farbe des Hakens */
                margin-right: 10px; /* Abstand zwischen Button-Text und Haken */
                vertical-align: middle; /* Vertikale Ausrichtung, damit es sich mit dem Text ausrichtet */
                opacity: 0;
            }

            .rate-buttons button.btn.active:before {
                content: ' ✓'; /* Fügt einen Haken nach dem Button-Text hinzu */
                font-size: 1.0rem; /* Größe des Hakens anpassen */
                color: white; /* Farbe des Hakens */
                margin-right: 10px; /* Abstand zwischen Button-Text und Haken */
                vertical-align: middle; /* Vertikale Ausrichtung, damit es sich mit dem Text ausrichtet */
                opacity: 1;
            }

    .tag-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin: 8px 0px 8px 0px;
        opacity: 0.5;
    }

    .tag-pill {
        background-color: #007bff;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        display: inline-block;
        white-space: nowrap;
    }


    .star-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin: 8px 0px 8px 0px;
        opacity: 0.5;
    }

    .star-pill {
        background-color: #ff7bff;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        display: inline-block;
        white-space: nowrap;
    }
</style>
